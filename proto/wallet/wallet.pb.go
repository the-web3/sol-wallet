// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: rpc/wallet.proto

package wallet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 交易所或者中心化钱包业务层对接接口
type WithdrawReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	ChainId       string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	FromAddress   string `protobuf:"bytes,3,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress     string `protobuf:"bytes,4,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amount        string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *WithdrawReq) Reset() {
	*x = WithdrawReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawReq) ProtoMessage() {}

func (x *WithdrawReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawReq.ProtoReflect.Descriptor instead.
func (*WithdrawReq) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *WithdrawReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *WithdrawReq) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *WithdrawReq) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *WithdrawReq) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *WithdrawReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type WithdrawRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Hash string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *WithdrawRep) Reset() {
	*x = WithdrawRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRep) ProtoMessage() {}

func (x *WithdrawRep) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRep.ProtoReflect.Descriptor instead.
func (*WithdrawRep) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *WithdrawRep) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WithdrawRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WithdrawRep) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type DepositNotifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	ChainId       string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Hash          string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	FromAddress   string `protobuf:"bytes,4,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress     string `protobuf:"bytes,5,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amount        string `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee           string `protobuf:"bytes,7,opt,name=fee,proto3" json:"fee,omitempty"`
	Block         uint64 `protobuf:"varint,8,opt,name=block,proto3" json:"block,omitempty"`
	Status        uint32 `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"` // 0:充值确认中，1:充值成功
}

func (x *DepositNotifyReq) Reset() {
	*x = DepositNotifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositNotifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositNotifyReq) ProtoMessage() {}

func (x *DepositNotifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositNotifyReq.ProtoReflect.Descriptor instead.
func (*DepositNotifyReq) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *DepositNotifyReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *DepositNotifyReq) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *DepositNotifyReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *DepositNotifyReq) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *DepositNotifyReq) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DepositNotifyReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *DepositNotifyReq) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *DepositNotifyReq) GetBlock() uint64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *DepositNotifyReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DepositNotifyRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Success bool   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DepositNotifyRep) Reset() {
	*x = DepositNotifyRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositNotifyRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositNotifyRep) ProtoMessage() {}

func (x *DepositNotifyRep) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositNotifyRep.ProtoReflect.Descriptor instead.
func (*DepositNotifyRep) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *DepositNotifyRep) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DepositNotifyRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DepositNotifyRep) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type WithdrawNotifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	ChainId       string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Hash          string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Status        uint32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"` // 0:提现确认中，1:提现成功
}

func (x *WithdrawNotifyReq) Reset() {
	*x = WithdrawNotifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawNotifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawNotifyReq) ProtoMessage() {}

func (x *WithdrawNotifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawNotifyReq.ProtoReflect.Descriptor instead.
func (*WithdrawNotifyReq) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *WithdrawNotifyReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *WithdrawNotifyReq) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *WithdrawNotifyReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *WithdrawNotifyReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type WithdrawNotifyRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Success bool   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *WithdrawNotifyRep) Reset() {
	*x = WithdrawNotifyRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawNotifyRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawNotifyRep) ProtoMessage() {}

func (x *WithdrawNotifyRep) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawNotifyRep.ProtoReflect.Descriptor instead.
func (*WithdrawNotifyRep) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *WithdrawNotifyRep) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WithdrawNotifyRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WithdrawNotifyRep) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 和风控层面对接的接口
type RiskVerifyAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	ChainId       string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ChainName     string `protobuf:"bytes,3,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	Address       string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"` // 对于钱包来说是 fromAddress
}

func (x *RiskVerifyAddressReq) Reset() {
	*x = RiskVerifyAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskVerifyAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskVerifyAddressReq) ProtoMessage() {}

func (x *RiskVerifyAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskVerifyAddressReq.ProtoReflect.Descriptor instead.
func (*RiskVerifyAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *RiskVerifyAddressReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *RiskVerifyAddressReq) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *RiskVerifyAddressReq) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *RiskVerifyAddressReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RiskVerifyAddressRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Verify bool   `protobuf:"varint,3,opt,name=verify,proto3" json:"verify,omitempty"`
}

func (x *RiskVerifyAddressRep) Reset() {
	*x = RiskVerifyAddressRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskVerifyAddressRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskVerifyAddressRep) ProtoMessage() {}

func (x *RiskVerifyAddressRep) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskVerifyAddressRep.ProtoReflect.Descriptor instead.
func (*RiskVerifyAddressRep) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *RiskVerifyAddressRep) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RiskVerifyAddressRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RiskVerifyAddressRep) GetVerify() bool {
	if x != nil {
		return x.Verify
	}
	return false
}

type RiskWithdrawVerifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	MsgHash       string `protobuf:"bytes,2,opt,name=msg_hash,json=msgHash,proto3" json:"msg_hash,omitempty"`
	SignMsg       string `protobuf:"bytes,3,opt,name=sign_msg,json=signMsg,proto3" json:"sign_msg,omitempty"`
}

func (x *RiskWithdrawVerifyReq) Reset() {
	*x = RiskWithdrawVerifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskWithdrawVerifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskWithdrawVerifyReq) ProtoMessage() {}

func (x *RiskWithdrawVerifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskWithdrawVerifyReq.ProtoReflect.Descriptor instead.
func (*RiskWithdrawVerifyReq) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *RiskWithdrawVerifyReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *RiskWithdrawVerifyReq) GetMsgHash() string {
	if x != nil {
		return x.MsgHash
	}
	return ""
}

func (x *RiskWithdrawVerifyReq) GetSignMsg() string {
	if x != nil {
		return x.SignMsg
	}
	return ""
}

// sign: request_id, from, to, amount, fee, nonce, memo 做一次 hash 的 signMessage(签名 Msg)
type RiskWithdrawVerifyRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Verify bool   `protobuf:"varint,3,opt,name=verify,proto3" json:"verify,omitempty"`
}

func (x *RiskWithdrawVerifyRep) Reset() {
	*x = RiskWithdrawVerifyRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskWithdrawVerifyRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskWithdrawVerifyRep) ProtoMessage() {}

func (x *RiskWithdrawVerifyRep) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskWithdrawVerifyRep.ProtoReflect.Descriptor instead.
func (*RiskWithdrawVerifyRep) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *RiskWithdrawVerifyRep) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RiskWithdrawVerifyRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RiskWithdrawVerifyRep) GetVerify() bool {
	if x != nil {
		return x.Verify
	}
	return false
}

// sign: request_id, from, to, amount, fee, gasPrice, gasLimit, hash, nonce, memo 做一次 hash 的 signMessage(签名 Msg)
type RiskDOrWNotifyVerifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	MsgHash       string `protobuf:"bytes,2,opt,name=msg_hash,json=msgHash,proto3" json:"msg_hash,omitempty"`
	SignMsg       string `protobuf:"bytes,3,opt,name=sign_msg,json=signMsg,proto3" json:"sign_msg,omitempty"`
}

func (x *RiskDOrWNotifyVerifyReq) Reset() {
	*x = RiskDOrWNotifyVerifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskDOrWNotifyVerifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskDOrWNotifyVerifyReq) ProtoMessage() {}

func (x *RiskDOrWNotifyVerifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskDOrWNotifyVerifyReq.ProtoReflect.Descriptor instead.
func (*RiskDOrWNotifyVerifyReq) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *RiskDOrWNotifyVerifyReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *RiskDOrWNotifyVerifyReq) GetMsgHash() string {
	if x != nil {
		return x.MsgHash
	}
	return ""
}

func (x *RiskDOrWNotifyVerifyReq) GetSignMsg() string {
	if x != nil {
		return x.SignMsg
	}
	return ""
}

type RiskDOrWNotifyVerifyRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Verify bool   `protobuf:"varint,3,opt,name=verify,proto3" json:"verify,omitempty"`
}

func (x *RiskDOrWNotifyVerifyRep) Reset() {
	*x = RiskDOrWNotifyVerifyRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_wallet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskDOrWNotifyVerifyRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskDOrWNotifyVerifyRep) ProtoMessage() {}

func (x *RiskDOrWNotifyVerifyRep) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_wallet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskDOrWNotifyVerifyRep.ProtoReflect.Descriptor instead.
func (*RiskDOrWNotifyVerifyRep) Descriptor() ([]byte, []int) {
	return file_rpc_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *RiskDOrWNotifyVerifyRep) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RiskDOrWNotifyVerifyRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RiskDOrWNotifyVerifyRep) GetVerify() bool {
	if x != nil {
		return x.Verify
	}
	return false
}

var File_rpc_wallet_proto protoreflect.FileDescriptor

var file_rpc_wallet_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x70, 0x63, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x68, 0x65,
	0x77, 0x65, 0x62, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22,
	0xa9, 0x01, 0x0a, 0x0b, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x0b, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x22, 0x82, 0x02, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x52, 0x0a, 0x10, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x81, 0x01,
	0x0a, 0x11, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x53, 0x0a, 0x11, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x52, 0x69, 0x73, 0x6b, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x54, 0x0a, 0x14, 0x52, 0x69,
	0x73, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x22, 0x74, 0x0a, 0x15, 0x52, 0x69, 0x73, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x69, 0x67, 0x6e, 0x4d, 0x73, 0x67, 0x22, 0x55, 0x0a, 0x15, 0x52, 0x69, 0x73, 0x6b, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x22, 0x76, 0x0a,
	0x17, 0x52, 0x69, 0x73, 0x6b, 0x44, 0x4f, 0x72, 0x57, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69,
	0x67, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69,
	0x67, 0x6e, 0x4d, 0x73, 0x67, 0x22, 0x57, 0x0a, 0x17, 0x52, 0x69, 0x73, 0x6b, 0x44, 0x4f, 0x72,
	0x57, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0xe0,
	0x05, 0x0a, 0x0d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6a, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x74, 0x68, 0x65, 0x77, 0x65, 0x62, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x68, 0x65, 0x77,
	0x65, 0x62, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0d,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x68, 0x65, 0x77, 0x65, 0x62, 0x74,
	0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x68, 0x65, 0x77, 0x65, 0x62, 0x74, 0x68,
	0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x72, 0x0a,
	0x0e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x68, 0x65, 0x77, 0x65,
	0x62, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x68, 0x65, 0x77, 0x65,
	0x62, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x22,
	0x00, 0x12, 0x77, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x68,
	0x65, 0x77, 0x65, 0x62, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x52, 0x69, 0x73, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x68, 0x65, 0x77, 0x65, 0x62, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x12, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x69, 0x67, 0x6e,
	0x12, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x68, 0x65, 0x77,
	0x65, 0x62, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x52,
	0x69, 0x73, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x68, 0x65, 0x77, 0x65, 0x62, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x14, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x69, 0x73, 0x6b, 0x44, 0x4f, 0x72, 0x57, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x34, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74,
	0x68, 0x65, 0x77, 0x65, 0x62, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x44, 0x4f, 0x72, 0x57, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x68, 0x65, 0x77, 0x65, 0x62, 0x74, 0x68, 0x72, 0x65, 0x65,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x44, 0x4f, 0x72, 0x57,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x22,
	0x00, 0x42, 0x2a, 0x0a, 0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x74, 0x68, 0x65, 0x77, 0x65,
	0x62, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5a, 0x0e, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_wallet_proto_rawDescOnce sync.Once
	file_rpc_wallet_proto_rawDescData = file_rpc_wallet_proto_rawDesc
)

func file_rpc_wallet_proto_rawDescGZIP() []byte {
	file_rpc_wallet_proto_rawDescOnce.Do(func() {
		file_rpc_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_wallet_proto_rawDescData)
	})
	return file_rpc_wallet_proto_rawDescData
}

var file_rpc_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_rpc_wallet_proto_goTypes = []interface{}{
	(*WithdrawReq)(nil),             // 0: services.thewebthree.wallet.WithdrawReq
	(*WithdrawRep)(nil),             // 1: services.thewebthree.wallet.WithdrawRep
	(*DepositNotifyReq)(nil),        // 2: services.thewebthree.wallet.DepositNotifyReq
	(*DepositNotifyRep)(nil),        // 3: services.thewebthree.wallet.DepositNotifyRep
	(*WithdrawNotifyReq)(nil),       // 4: services.thewebthree.wallet.WithdrawNotifyReq
	(*WithdrawNotifyRep)(nil),       // 5: services.thewebthree.wallet.WithdrawNotifyRep
	(*RiskVerifyAddressReq)(nil),    // 6: services.thewebthree.wallet.RiskVerifyAddressReq
	(*RiskVerifyAddressRep)(nil),    // 7: services.thewebthree.wallet.RiskVerifyAddressRep
	(*RiskWithdrawVerifyReq)(nil),   // 8: services.thewebthree.wallet.RiskWithdrawVerifyReq
	(*RiskWithdrawVerifyRep)(nil),   // 9: services.thewebthree.wallet.RiskWithdrawVerifyRep
	(*RiskDOrWNotifyVerifyReq)(nil), // 10: services.thewebthree.wallet.RiskDOrWNotifyVerifyReq
	(*RiskDOrWNotifyVerifyRep)(nil), // 11: services.thewebthree.wallet.RiskDOrWNotifyVerifyRep
}
var file_rpc_wallet_proto_depIdxs = []int32{
	0,  // 0: services.thewebthree.wallet.WalletService.submitWithdrawInfo:input_type -> services.thewebthree.wallet.WithdrawReq
	2,  // 1: services.thewebthree.wallet.WalletService.depositNotify:input_type -> services.thewebthree.wallet.DepositNotifyReq
	4,  // 2: services.thewebthree.wallet.WalletService.withdrawNotify:input_type -> services.thewebthree.wallet.WithdrawNotifyReq
	6,  // 3: services.thewebthree.wallet.WalletService.verifyAddress:input_type -> services.thewebthree.wallet.RiskVerifyAddressReq
	8,  // 4: services.thewebthree.wallet.WalletService.verifyWithdrawSign:input_type -> services.thewebthree.wallet.RiskWithdrawVerifyReq
	10, // 5: services.thewebthree.wallet.WalletService.verifyRiskDOrWNotify:input_type -> services.thewebthree.wallet.RiskDOrWNotifyVerifyReq
	1,  // 6: services.thewebthree.wallet.WalletService.submitWithdrawInfo:output_type -> services.thewebthree.wallet.WithdrawRep
	3,  // 7: services.thewebthree.wallet.WalletService.depositNotify:output_type -> services.thewebthree.wallet.DepositNotifyRep
	5,  // 8: services.thewebthree.wallet.WalletService.withdrawNotify:output_type -> services.thewebthree.wallet.WithdrawNotifyRep
	7,  // 9: services.thewebthree.wallet.WalletService.verifyAddress:output_type -> services.thewebthree.wallet.RiskVerifyAddressRep
	9,  // 10: services.thewebthree.wallet.WalletService.verifyWithdrawSign:output_type -> services.thewebthree.wallet.RiskWithdrawVerifyRep
	11, // 11: services.thewebthree.wallet.WalletService.verifyRiskDOrWNotify:output_type -> services.thewebthree.wallet.RiskDOrWNotifyVerifyRep
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_rpc_wallet_proto_init() }
func file_rpc_wallet_proto_init() {
	if File_rpc_wallet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_wallet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_wallet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_wallet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositNotifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_wallet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositNotifyRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_wallet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawNotifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_wallet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawNotifyRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_wallet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskVerifyAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_wallet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskVerifyAddressRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_wallet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskWithdrawVerifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_wallet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskWithdrawVerifyRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_wallet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskDOrWNotifyVerifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_wallet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskDOrWNotifyVerifyRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_wallet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_wallet_proto_goTypes,
		DependencyIndexes: file_rpc_wallet_proto_depIdxs,
		MessageInfos:      file_rpc_wallet_proto_msgTypes,
	}.Build()
	File_rpc_wallet_proto = out.File
	file_rpc_wallet_proto_rawDesc = nil
	file_rpc_wallet_proto_goTypes = nil
	file_rpc_wallet_proto_depIdxs = nil
}
